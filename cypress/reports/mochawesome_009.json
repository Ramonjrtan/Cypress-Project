{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-09T11:31:22.893Z",
    "end": "2025-05-09T11:32:50.884Z",
    "duration": 87991,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6ea8b607-b88a-491a-b2a3-6dfedadc5cc9",
      "title": "",
      "fullFile": "cypress\\e2e\\D1_CPTicketEmail.cy.js",
      "file": "cypress\\e2e\\D1_CPTicketEmail.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "403a050e-4c0a-4a1e-a512-6c4ad22a1174",
          "title": "Visit different origins",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login and work across multiple origins",
              "fullTitle": "Visit different origins should login and work across multiple origins",
              "timedOut": null,
              "duration": 85890,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.viewport(1920, 1080);\nconst {\n  email,\n  password,\n  cpDashboard,\n  taskDashboardHeader\n} = __webpack_require__(/*! ../../cypress.env.json */ \"./cypress.env.json\");\n// Step 1: Log in to Client Portal\n(0, _CP_LoginGroups.cp_login)(email, password);\ncy.log('✅ Successfully logged in');\n// Step 2: Wait for dashboard to load\ncy.get(_cypressEnv.default.clientPortal.Dashboard, {\n  timeout: 50000\n}).should('be.visible');\ncy.log('✅ Dashboard is visible');\n// Step 3: Create a new ticket\n(0, _CP_CreateTicketGroups.cp_addticket)();\ncy.log('✅ Ticket created in client portal');\n// Step 4: Logout from Client Portal\ncy.get('.name').should('be.visible').click();\ncy.contains('Logout').should('be.visible').click();\ncy.wait(3000);\n// Step 5: Intercept B2C redirect URL\ncy.intercept('GET', '**/b2c_1_dispatch3_signupsignin/**').as('b2cRedirect');\n// Step 6: Visit Core site\ncy.visit('https://core.dispatch1.com');\n// Step 7: Trigger B2C login\ncy.origin('https://core.dispatch1.com', () => {\n  cy.get('.btn', {\n    timeout: 20000\n  }).should('be.visible').click();\n});\n// Step 8: Wait for B2C redirect\ncy.wait('@b2cRedirect');\n// Step 9: Perform B2C Login\ncy.origin('https://dispatchone.b2clogin.com', {\n  args: {\n    email,\n    password\n  }\n}, ({\n  email,\n  password\n}) => {\n  cy.get('input[placeholder=\"Email Address\"]').should('be.visible').type(email);\n  cy.get('input[placeholder=\"Password\"]').should('be.visible').type(password, {\n    log: false\n  });\n  cy.get('button[type=\"submit\"]').should('be.visible').click();\n});\n// Step 10: Confirm return to core site\ncy.wait(3000);\ncy.origin('https://core.dispatch1.com', () => {\n  cy.url().should('include', 'core.dispatch1.com');\n});\n// Step 11: Wait for Task Dashboard to load\ncy.origin('https://core.dispatch1.com', {\n  args: {\n    taskDashboardHeader\n  }\n}, ({\n  taskDashboardHeader\n}) => {\n  cy.get(taskDashboardHeader, {\n    timeout: 60000\n  }).should('be.visible').and('contain', 'Task Dashboard');\n  cy.log('✅ Task Dashboard is visible');\n});\n// Step 12: Navigate to contract page\ncy.origin('https://core.dispatch1.com', {\n  args: {\n    contractDetailsPage: _cypressEnv.default.contractDetailsPage,\n    contractHeader: _cypressEnv.default.contractHeader\n  }\n}, ({\n  contractDetailsPage,\n  contractHeader\n}) => {\n  cy.visit(contractDetailsPage);\n  cy.get(contractHeader, {\n    timeout: 60000\n  }).should('be.visible').and('contain', 'Contract Details');\n  cy.log('✅ Navigated to contract');\n});\n// Step 13: Edit CP Ticket\ncy.intercept('GET', '**/tickets?*').as('fetchTickets');\ncy.origin('https://core.dispatch1.com', {\n  args: {\n    ticketTabButton: _cypressEnv.default.ticketTabButton,\n    ticketTabHeader: _cypressEnv.default.ticketTabHeader,\n    ticketRow: _cypressEnv.default.ticketRow,\n    ticketSearchInput: _cypressEnv.default.ticketSearchInput,\n    ticketDetailsHeader: _cypressEnv.default.ticketDetailsHeader,\n    buyTabIcon: _cypressEnv.default.buyTabIcon,\n    ticketEmailLabel: _cypressEnv.default.ticketEmailLabel\n  }\n}, ({\n  ticketTabButton,\n  ticketTabHeader,\n  ticketRow,\n  ticketSearchInput,\n  ticketDetailsHeader,\n  buyTabIcon,\n  ticketEmailLabel\n}) => {\n  // Step 1: Click on the Tickets tab\n  cy.get(ticketTabButton, {\n    timeout: 60000\n  }).should('be.visible').click();\n  // Step 2: Wait for Tickets header to be visible\n  cy.get(ticketTabHeader, {\n    timeout: 60000\n  }).should('contain', 'Tickets');\n  // Step 3: Wait for ticket table data and get the first ticket link\n  cy.wait('@fetchTickets');\n  cy.get(ticketRow, {\n    timeout: 30000\n  }).should('have.length.greaterThan', 0);\n  // Step 4: Find the ticket link and extract ticket number\n  cy.get(ticketRow).first().find('a[href*=\"/ticket\"]').first().should('be.visible').invoke('attr', 'href').then(href => {\n    const ticketNum = href.split('/').pop(); // Extract ticket number\n    cy.wrap(ticketNum).as('cpTicketNumber');\n  });\n  // Step 5: Search for the ticket by number\n  cy.get('@cpTicketNumber').then(ticketNum => {\n    cy.get(ticketSearchInput).should('be.visible').clear().type(ticketNum);\n  });\n  // Step 6: Wait for filtered results to load\n  cy.wait('@fetchTickets');\n  cy.get(ticketRow, {\n    timeout: 10000\n  }).should('have.length.above', 0);\n  // Step 7: Click the filtered ticket link\n  cy.get(ticketRow).first().within(() => {\n    cy.get('a[href*=\"/ticket\"]').should('exist') // Ensure the element is in the DOM\n    .should('be.visible') // Ensure it's rendered\n    .then($link => {\n      // Manually wrap and click — avoids stale element issues\n      cy.wrap($link).click({\n        force: true\n      });\n    });\n  });\n  // Step 8: Wait for Ticket Details to load\n  cy.get(ticketDetailsHeader, {\n    timeout: 10000\n  }).should('contain', 'Ticket Details');\n  cy.wait(2000); // Optional: wait for full page load\n  // Step 9: Click on Email tab\n  cy.get(buyTabIcon).contains('mail').should('be.visible').click();\n  cy.wait(3000); // Optional: wait for full page load\n  // Step 10: Wait until conversation view loads\n  cy.contains(ticketEmailLabel, 'No Conversation Selected', {\n    timeout: 10000\n  }).should('be.visible');\n});\n// Step 16: (Optional) Verify email content inline if needed",
              "err": {
                "message": "CypressError: `cy.visit()` must be called with a `url` or an `options` object containing a `url` as its 1st argument\n\nhttps://on.cypress.io/visit",
                "estack": "CypressError: `cy.visit()` must be called with a `url` or an `options` object containing a `url` as its 1st argument\n\nhttps://on.cypress.io/visit\n    at Context.eval (webpack://cypressproject-1/./cypress/e2e/D1_CPTicketEmail.cy.js:74:7)\n    at runnable.fn (https://client.dispatch1.com/__cypress/runner/cypress_runner.js:140440:19)\n    at callFn (https://client.dispatch1.com/__cypress/runner/cypress_runner.js:159518:21)\n    at Runnable.run (https://client.dispatch1.com/__cypress/runner/cypress_runner.js:159505:7)\n    at <unknown> (https://client.dispatch1.com/__cypress/runner/cypress_runner.js:165577:30)\n    at PassThroughHandlerContext.finallyHandler (https://client.dispatch1.com/__cypress/runner/cypress_runner.js:4042:23)\n    at PassThroughHandlerContext.tryCatcher (https://client.dispatch1.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://client.dispatch1.com/__cypress/runner/cypress_runner.js:1489:31)",
                "diff": null
              },
              "uuid": "b19c9f89-0aa8-4fdc-be83-50156e4b4d5b",
              "parentUUID": "403a050e-4c0a-4a1e-a512-6c4ad22a1174",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b19c9f89-0aa8-4fdc-be83-50156e4b4d5b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 85890,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}